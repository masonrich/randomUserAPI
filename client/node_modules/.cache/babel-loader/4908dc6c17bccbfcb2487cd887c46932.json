{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mason\\\\Projects\\\\clozd_assignment\\\\client\\\\src\\\\App\\\\pages\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport DataTable from \"../components/DataTable\"; // import DataTable2 from \"../components/DataTable2\";\n\nimport Pages from \"../components/Pages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  //state variables using hooks\n  const [usersList, setUsersList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1); //component mount and user retrieval\n\n  useEffect(() => {\n    //function to call API from backend with page number as parameter\n    //then order the users in the table and set state variables\n    const getUsers = async () => {\n      setLoading(true);\n      await fetch(\"/api/getList/\" + page).then(res => res.json()) // .then((list) => list.sort((a, b) => (a.name.last > b.name.last ? 1 : -1)))\n      .then(list => {\n        setUsersList(list); // console.log(\"getUsers:\");\n        // console.log(list);\n\n        setLoading(false);\n      });\n    };\n\n    getUsers();\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: 50\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Clozd Assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Mason Rich\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      variant: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(DataTable, {\n      data: usersList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) // <DataTable2 data2={usersList} />\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"A9hASQ1xlNdS3ySC27dBk50ILmc=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/mason/Projects/clozd_assignment/client/src/App/pages/Main.js"],"names":["React","useEffect","useState","Spinner","DataTable","Pages","Main","usersList","setUsersList","loading","setLoading","page","setPage","getUsers","fetch","then","res","json","list","margin"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB,C,CACA;;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC,CAJiB,CAMjB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA,UAAMY,QAAQ,GAAG,YAAY;AAC3BH,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMI,KAAK,CAAC,kBAAkBH,IAAnB,CAAL,CACHI,IADG,CACGC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADX,EAEJ;AAFI,OAGHF,IAHG,CAGGG,IAAD,IAAU;AACdV,QAAAA,YAAY,CAACU,IAAD,CAAZ,CADc,CAEd;AACA;;AACAR,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OARG,CAAN;AASD,KAXD;;AAYAG,IAAAA,QAAQ;AACT,GAhBQ,EAgBN,CAACF,IAAD,CAhBM,CAAT;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,KAAK,EAAE;AAAEQ,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAMGV,OAAO,gBACN,QAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,OAAO,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,YADM,gBAGN,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEF;AAAjB;AAAA;AAAA;AAAA;AAAA,YAHM,CAIN;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAzCD;;GAAMD,I;;KAAAA,I;AA2CN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport DataTable from \"../components/DataTable\";\r\n// import DataTable2 from \"../components/DataTable2\";\r\n\r\nimport Pages from \"../components/Pages\";\r\n\r\nconst Main = () => {\r\n  //state variables using hooks\r\n  const [usersList, setUsersList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n\r\n  //component mount and user retrieval\r\n  useEffect(() => {\r\n    //function to call API from backend with page number as parameter\r\n    //then order the users in the table and set state variables\r\n    const getUsers = async () => {\r\n      setLoading(true);\r\n      await fetch(\"/api/getList/\" + page)\r\n        .then((res) => res.json())\r\n        // .then((list) => list.sort((a, b) => (a.name.last > b.name.last ? 1 : -1)))\r\n        .then((list) => {\r\n          setUsersList(list);\r\n          // console.log(\"getUsers:\");\r\n          // console.log(list);\r\n          setLoading(false);\r\n        });\r\n    };\r\n    getUsers();\r\n  }, [page]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div style={{ margin: 50 }}>\r\n        <h1>Clozd Assignment</h1>\r\n        <h3>Mason Rich</h3>\r\n      </div>\r\n      {/* If loading show spinner, else show data table */}\r\n      {loading ? (\r\n        <Spinner animation=\"border\" variant=\"primary\" />\r\n      ) : (\r\n        <DataTable data={usersList} />\r\n        // <DataTable2 data2={usersList} />\r\n      )}\r\n      {/* <Pages setPage={setPage} page={page} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}