{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mason\\\\Projects\\\\clozd_assignment\\\\client\\\\src\\\\App\\\\pages\\\\Details.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Spinner } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Details = props => {\n  const {\n    userData\n  } = props.location.state; // const [userData, setUserData] = useState(user);\n  // const [loading, setLoading] = useState(true);\n  // useEffect(() => {\n  //   const loadData = () => {\n  //     setLoading(true);\n  //     setUserData(user);\n  //     setLoading(false);\n  //   };\n  //   loadData();\n  // }, [userData]);\n\n  function formatDate(t, a, s) {\n    function format(m) {\n      let f = new Intl.DateTimeFormat(\"en\", m);\n      return f.format(t);\n    }\n\n    return a.map(format).join(s);\n  }\n\n  let format = [{\n    day: \"numeric\"\n  }, {\n    month: \"short\"\n  }, {\n    year: \"numeric\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: userData.name.first + \" \" + userData.name.last\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: userData.picture.large,\n          alt: \"Profile pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: userData.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: userData.location.street.number + \" \" + userData.location.street.name + \" \" + userData.location.city + \", \" + userData.location.state + \" \" + userData.location.postcode + \" \" + userData.location.country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: userData.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: formatDate(new Date(userData.dob.date), format, \"/\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"../\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        variant: \"raised\",\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}; // }\n\n\n_c = Details;\nexport default Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["C:/Users/mason/Projects/clozd_assignment/client/src/App/pages/Details.js"],"names":["React","useState","useEffect","Link","Spinner","Details","props","userData","location","state","formatDate","t","a","s","format","m","f","Intl","DateTimeFormat","map","join","day","month","year","name","first","last","picture","large","email","street","number","city","postcode","country","phone","Date","dob","date"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAAK,CAACE,QAAN,CAAeC,KAApC,CADyB,CAEzB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAASC,UAAT,CAAoBC,CAApB,EAAuBC,CAAvB,EAA0BC,CAA1B,EAA6B;AAC3B,aAASC,MAAT,CAAgBC,CAAhB,EAAmB;AACjB,UAAIC,CAAC,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwB,IAAxB,EAA8BH,CAA9B,CAAR;AACA,aAAOC,CAAC,CAACF,MAAF,CAASH,CAAT,CAAP;AACD;;AACD,WAAOC,CAAC,CAACO,GAAF,CAAML,MAAN,EAAcM,IAAd,CAAmBP,CAAnB,CAAP;AACD;;AAED,MAAIC,MAAM,GAAG,CAAC;AAAEO,IAAAA,GAAG,EAAE;AAAP,GAAD,EAAqB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAArB,EAAyC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAzC,CAAb;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,8BACE;AAAA,kBAAKhB,QAAQ,CAACiB,IAAT,CAAcC,KAAd,GAAsB,GAAtB,GAA4BlB,QAAQ,CAACiB,IAAT,CAAcE;AAA/C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEnB,QAAQ,CAACoB,OAAT,CAAiBC,KAA3B;AAAkC,UAAA,GAAG,EAAE;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAA,kBAAIrB,QAAQ,CAACsB;AAAb;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,kBACGtB,QAAQ,CAACC,QAAT,CAAkBsB,MAAlB,CAAyBC,MAAzB,GACC,GADD,GAECxB,QAAQ,CAACC,QAAT,CAAkBsB,MAAlB,CAAyBN,IAF1B,GAGC,GAHD,GAICjB,QAAQ,CAACC,QAAT,CAAkBwB,IAJnB,GAKC,IALD,GAMCzB,QAAQ,CAACC,QAAT,CAAkBC,KANnB,GAOC,GAPD,GAQCF,QAAQ,CAACC,QAAT,CAAkByB,QARnB,GASC,GATD,GAUC1B,QAAQ,CAACC,QAAT,CAAkB0B;AAXtB;AAAA;AAAA;AAAA;AAAA,cANF,eAmBE;AAAA,kBAAI3B,QAAQ,CAAC4B;AAAb;AAAA;AAAA;AAAA;AAAA,cAnBF,eAoBE;AAAA,kBAAIzB,UAAU,CAAC,IAAI0B,IAAJ,CAAS7B,QAAQ,CAAC8B,GAAT,CAAaC,IAAtB,CAAD,EAA8BxB,MAA9B,EAAsC,GAAtC;AAAd;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAwBE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE,KAAV;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAtDD,C,CAuDA;;;KAvDMT,O;AAwDN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Details = (props) => {\r\n  const { userData } = props.location.state;\r\n  // const [userData, setUserData] = useState(user);\r\n  // const [loading, setLoading] = useState(true);\r\n\r\n  // useEffect(() => {\r\n  //   const loadData = () => {\r\n  //     setLoading(true);\r\n  //     setUserData(user);\r\n  //     setLoading(false);\r\n  //   };\r\n  //   loadData();\r\n  // }, [userData]);\r\n\r\n  function formatDate(t, a, s) {\r\n    function format(m) {\r\n      let f = new Intl.DateTimeFormat(\"en\", m);\r\n      return f.format(t);\r\n    }\r\n    return a.map(format).join(s);\r\n  }\r\n\r\n  let format = [{ day: \"numeric\" }, { month: \"short\" }, { year: \"numeric\" }];\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <h1>{userData.name.first + \" \" + userData.name.last}</h1>\r\n        <div>\r\n          <img src={userData.picture.large} alt={\"Profile pic\"} />\r\n        </div>\r\n        <p>{userData.email}</p>\r\n        <p>\r\n          {userData.location.street.number +\r\n            \" \" +\r\n            userData.location.street.name +\r\n            \" \" +\r\n            userData.location.city +\r\n            \", \" +\r\n            userData.location.state +\r\n            \" \" +\r\n            userData.location.postcode +\r\n            \" \" +\r\n            userData.location.country}\r\n        </p>\r\n        <p>{userData.phone}</p>\r\n        <p>{formatDate(new Date(userData.dob.date), format, \"/\")}</p>\r\n      </div>\r\n      {/* Link to List.js */}\r\n      <Link to={\"../\"}>\r\n        <button variant=\"raised\">Go Back</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n// }\r\nexport default Details;\r\n"]},"metadata":{},"sourceType":"module"}