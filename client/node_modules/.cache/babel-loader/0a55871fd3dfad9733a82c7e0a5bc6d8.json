{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mason\\\\Projects\\\\clozd_assignment\\\\client\\\\src\\\\App\\\\pages\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport DataTable from \"../components/DataTable\";\nimport DataTable2 from \"../components/DataTable2\";\nimport Pages from \"../components/Pages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  //state variables using hooks\n  const [usersList, setUsersList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [seed, setSeed] = useState(\"abc\"); //component mount and user retrieval\n\n  useEffect(() => {\n    //function to call API from backend with page number as parameter\n    //then order the users in the table and set state variables\n    const getUsers = async () => {\n      setLoading(true);\n      var temp = [];\n      await fetch(\"/api/getList/\" + seed).then(res => res.json()) // .then((list) => list.sort((a, b) => (a.name.last > b.name.last ? 1 : -1)))\n      .then(list => {\n        // setUsersList(list);\n        temp = list;\n        setSeed(\"def\");\n      });\n      await fetch(\"/api/getList/\" + seed).then(res => res.json()) // .then((list) => list.sort((a, b) => (a.name.last > b.name.last ? 1 : -1)))\n      .then(list => {\n        // setUsersList(list);\n        // temp = list;\n        temp.push.apply(temp, list);\n      });\n      setUsersList(temp);\n      setLoading(false);\n    };\n\n    getUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: 50\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Clozd Assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Mason Rich\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      variant: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // <DataTable data={usersList} />\n    _jsxDEV(DataTable2, {\n      data: usersList,\n      page: page,\n      setPage: setPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"/8X39rDwLdRQ2nQsGvMdHQxpJoQ=\");\n\n_c = Main;\nexport default _c2 = /*#__PURE__*/React.memo(Main);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/mason/Projects/clozd_assignment/client/src/App/pages/Main.js"],"names":["React","useEffect","useState","Spinner","DataTable","DataTable2","Pages","Main","usersList","setUsersList","loading","setLoading","page","setPage","seed","setSeed","getUsers","temp","fetch","then","res","json","list","push","apply","margin","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,KAAD,CAAhC,CALiB,CAOjB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA,UAAMe,QAAQ,GAAG,YAAY;AAC3BL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAIM,IAAI,GAAG,EAAX;AACA,YAAMC,KAAK,CAAC,kBAAkBJ,IAAnB,CAAL,CACHK,IADG,CACGC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADX,EAEJ;AAFI,OAGHF,IAHG,CAGGG,IAAD,IAAU;AACd;AACAL,QAAAA,IAAI,GAAGK,IAAP;AACAP,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD,OAPG,CAAN;AAQA,YAAMG,KAAK,CAAC,kBAAkBJ,IAAnB,CAAL,CACHK,IADG,CACGC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADX,EAEJ;AAFI,OAGHF,IAHG,CAGGG,IAAD,IAAU;AACd;AACA;AACAL,QAAAA,IAAI,CAACM,IAAL,CAAUC,KAAV,CAAgBP,IAAhB,EAAsBK,IAAtB;AACD,OAPG,CAAN;AAQAb,MAAAA,YAAY,CAACQ,IAAD,CAAZ;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KArBD;;AAsBAK,IAAAA,QAAQ;AACT,GA1BQ,EA0BN,EA1BM,CAAT;AA4BA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,KAAK,EAAE;AAAES,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAMGf,OAAO,gBACN,QAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,OAAO,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,YADM;AAAA;AAGN;AACA,YAAC,UAAD;AAAY,MAAA,IAAI,EAAEF,SAAlB;AAA6B,MAAA,IAAI,EAAEI,IAAnC;AAAyC,MAAA,OAAO,EAAEC;AAAlD;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CApDD;;GAAMN,I;;KAAAA,I;AAsDN,kCAAeP,KAAK,CAAC0B,IAAN,CAAWnB,IAAX,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport DataTable from \"../components/DataTable\";\r\nimport DataTable2 from \"../components/DataTable2\";\r\n\r\nimport Pages from \"../components/Pages\";\r\n\r\nconst Main = () => {\r\n  //state variables using hooks\r\n  const [usersList, setUsersList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [seed, setSeed] = useState(\"abc\");\r\n\r\n  //component mount and user retrieval\r\n  useEffect(() => {\r\n    //function to call API from backend with page number as parameter\r\n    //then order the users in the table and set state variables\r\n    const getUsers = async () => {\r\n      setLoading(true);\r\n      var temp = [];\r\n      await fetch(\"/api/getList/\" + seed)\r\n        .then((res) => res.json())\r\n        // .then((list) => list.sort((a, b) => (a.name.last > b.name.last ? 1 : -1)))\r\n        .then((list) => {\r\n          // setUsersList(list);\r\n          temp = list;\r\n          setSeed(\"def\");\r\n        });\r\n      await fetch(\"/api/getList/\" + seed)\r\n        .then((res) => res.json())\r\n        // .then((list) => list.sort((a, b) => (a.name.last > b.name.last ? 1 : -1)))\r\n        .then((list) => {\r\n          // setUsersList(list);\r\n          // temp = list;\r\n          temp.push.apply(temp, list);\r\n        });\r\n      setUsersList(temp);\r\n      setLoading(false);\r\n    };\r\n    getUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div style={{ margin: 50 }}>\r\n        <h1>Clozd Assignment</h1>\r\n        <h3>Mason Rich</h3>\r\n      </div>\r\n      {/* If loading show spinner, else show data table */}\r\n      {loading ? (\r\n        <Spinner animation=\"border\" variant=\"primary\" />\r\n      ) : (\r\n        // <DataTable data={usersList} />\r\n        <DataTable2 data={usersList} page={page} setPage={setPage} />\r\n      )}\r\n      {/* <Pages setPage={setPage} page={page} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Main);\r\n"]},"metadata":{},"sourceType":"module"}