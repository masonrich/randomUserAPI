{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mason\\\\Projects\\\\clozd_assignment\\\\client\\\\src\\\\App\\\\components\\\\Pagination2.js\";\n\n/*\r\n\r\n    This component was found here: https://www.digitalocean.com/community/tutorials/how-to-build-custom-pagination-with-react\r\n    I needed a pagination component that fit what I needed as far as dynamicness with a large data set\r\n\r\n*/\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LEFT_PAGE = \"LEFT\";\nconst RIGHT_PAGE = \"RIGHT\";\n\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n};\n\nclass Pagination extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchPageNumbers = () => {\n      const totalPages = this.totalPages;\n      const currentPage = this.state.currentPage;\n      const pageNeighbours = this.pageNeighbours;\n      /**\r\n       * totalNumbers: the total page numbers to show on the control\r\n       * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\r\n       */\n\n      const totalNumbers = this.pageNeighbours * 2 + 3;\n      const totalBlocks = totalNumbers + 2;\n\n      if (totalPages > totalBlocks) {\n        const startPage = Math.max(2, currentPage - pageNeighbours);\n        const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\n        let pages = range(startPage, endPage);\n        /**\r\n         * hasLeftSpill: has hidden pages to the left\r\n         * hasRightSpill: has hidden pages to the right\r\n         * spillOffset: number of hidden pages either to the left or to the right\r\n         */\n\n        const hasLeftSpill = startPage > 2;\n        const hasRightSpill = totalPages - endPage > 1;\n        const spillOffset = totalNumbers - (pages.length + 1);\n\n        switch (true) {\n          // handle: (1) < {5 6} [7] {8 9} (10)\n          case hasLeftSpill && !hasRightSpill:\n            {\n              const extraPages = range(startPage - spillOffset, startPage - 1);\n              pages = [LEFT_PAGE, ...extraPages, ...pages];\n              break;\n            }\n          // handle: (1) {2 3} [4] {5 6} > (10)\n\n          case !hasLeftSpill && hasRightSpill:\n            {\n              const extraPages = range(endPage + 1, endPage + spillOffset);\n              pages = [...pages, ...extraPages, RIGHT_PAGE];\n              break;\n            }\n          // handle: (1) < {4 5} [6] {7 8} > (10)\n\n          case hasLeftSpill && hasRightSpill:\n          default:\n            {\n              pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\n              break;\n            }\n        }\n\n        return [1, ...pages, totalPages];\n      }\n\n      return range(1, totalPages);\n    };\n\n    this.gotoPage = page => {\n      const {\n        onPageChanged = f => f\n      } = this.props;\n      const currentPage = Math.max(0, Math.min(page, this.totalPages));\n      const paginationData = {\n        currentPage,\n        totalPages: this.totalPages,\n        pageLimit: this.pageLimit,\n        totalRecords: this.totalRecords\n      };\n      this.setState({\n        currentPage\n      }, () => onPageChanged(paginationData));\n    };\n\n    this.handleClick = page => evt => {\n      evt.preventDefault();\n      this.gotoPage(page);\n    };\n\n    this.handleMoveLeft = evt => {\n      evt.preventDefault();\n      this.gotoPage(this.state.currentPage - this.pageNeighbours * 2 - 1);\n    };\n\n    this.handleMoveRight = evt => {\n      evt.preventDefault();\n      this.gotoPage(this.state.currentPage + this.pageNeighbours * 2 + 1);\n    };\n\n    const {\n      totalRecords = null,\n      pageLimit = 30,\n      pageNeighbours: _pageNeighbours = 0\n    } = props;\n    this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 30;\n    this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0; // pageNeighbours can be: 0, 1 or 2\n\n    this.pageNeighbours = typeof _pageNeighbours === \"number\" ? Math.max(0, Math.min(_pageNeighbours, 2)) : 0;\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n    this.state = {\n      currentPage: 1\n    };\n  }\n\n  render() {\n    if (!this.totalRecords || this.totalPages === 1) return null;\n    const {\n      currentPage\n    } = this.state;\n    const pages = this.fetchPageNumbers();\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"Pagination\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"pagination\",\n          children: pages.map((page, index) => {\n            if (page === LEFT_PAGE) return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"page-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"page-link\",\n                href: \"#\",\n                \"aria-label\": \"Previous\",\n                onClick: this.handleMoveLeft,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  \"aria-hidden\": \"true\",\n                  children: \"\\xAB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"sr-only\",\n                  children: \"Previous\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this);\n            if (page === RIGHT_PAGE) return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"page-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"page-link\",\n                href: \"#\",\n                \"aria-label\": \"Next\",\n                onClick: this.handleMoveRight,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  \"aria-hidden\": \"true\",\n                  children: \"\\xBB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"sr-only\",\n                  children: \"Next\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this);\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `page-item${currentPage === page ? \" active\" : \"\"}`,\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"page-link\",\n                href: \"#\",\n                onClick: this.handleClick(page),\n                children: page\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n\n  componentDidMount() {\n    this.gotoPage(1);\n  }\n\n}\n\nexport default Pagination2;","map":{"version":3,"sources":["C:/Users/mason/Projects/clozd_assignment/client/src/App/components/Pagination2.js"],"names":["React","Component","Fragment","PropTypes","LEFT_PAGE","RIGHT_PAGE","range","from","to","step","i","push","Pagination","constructor","props","fetchPageNumbers","totalPages","currentPage","state","pageNeighbours","totalNumbers","totalBlocks","startPage","Math","max","endPage","min","pages","hasLeftSpill","hasRightSpill","spillOffset","length","extraPages","gotoPage","page","onPageChanged","f","paginationData","pageLimit","totalRecords","setState","handleClick","evt","preventDefault","handleMoveLeft","handleMoveRight","ceil","render","map","index","componentDidMount","Pagination2"],"mappings":"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","sourcesContent":["/*\r\n\r\n    This component was found here: https://www.digitalocean.com/community/tutorials/how-to-build-custom-pagination-with-react\r\n    I needed a pagination component that fit what I needed as far as dynamicness with a large data set\r\n\r\n*/\r\n\r\nimport React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LEFT_PAGE = \"LEFT\";\r\nconst RIGHT_PAGE = \"RIGHT\";\r\n\r\nconst range = (from, to, step = 1) => {\r\n  let i = from;\r\n  const range = [];\r\n\r\n  while (i <= to) {\r\n    range.push(i);\r\n    i += step;\r\n  }\r\n\r\n  return range;\r\n};\r\n\r\nclass Pagination extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\r\n\r\n    this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 30;\r\n    this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\r\n\r\n    // pageNeighbours can be: 0, 1 or 2\r\n    this.pageNeighbours =\r\n      typeof pageNeighbours === \"number\"\r\n        ? Math.max(0, Math.min(pageNeighbours, 2))\r\n        : 0;\r\n\r\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\r\n\r\n    this.state = { currentPage: 1 };\r\n  }\r\n\r\n  fetchPageNumbers = () => {\r\n    const totalPages = this.totalPages;\r\n    const currentPage = this.state.currentPage;\r\n    const pageNeighbours = this.pageNeighbours;\r\n\r\n    /**\r\n     * totalNumbers: the total page numbers to show on the control\r\n     * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\r\n     */\r\n    const totalNumbers = this.pageNeighbours * 2 + 3;\r\n    const totalBlocks = totalNumbers + 2;\r\n\r\n    if (totalPages > totalBlocks) {\r\n      const startPage = Math.max(2, currentPage - pageNeighbours);\r\n      const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\r\n      let pages = range(startPage, endPage);\r\n\r\n      /**\r\n       * hasLeftSpill: has hidden pages to the left\r\n       * hasRightSpill: has hidden pages to the right\r\n       * spillOffset: number of hidden pages either to the left or to the right\r\n       */\r\n      const hasLeftSpill = startPage > 2;\r\n      const hasRightSpill = totalPages - endPage > 1;\r\n      const spillOffset = totalNumbers - (pages.length + 1);\r\n\r\n      switch (true) {\r\n        // handle: (1) < {5 6} [7] {8 9} (10)\r\n        case hasLeftSpill && !hasRightSpill: {\r\n          const extraPages = range(startPage - spillOffset, startPage - 1);\r\n          pages = [LEFT_PAGE, ...extraPages, ...pages];\r\n          break;\r\n        }\r\n\r\n        // handle: (1) {2 3} [4] {5 6} > (10)\r\n        case !hasLeftSpill && hasRightSpill: {\r\n          const extraPages = range(endPage + 1, endPage + spillOffset);\r\n          pages = [...pages, ...extraPages, RIGHT_PAGE];\r\n          break;\r\n        }\r\n\r\n        // handle: (1) < {4 5} [6] {7 8} > (10)\r\n        case hasLeftSpill && hasRightSpill:\r\n        default: {\r\n          pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\r\n          break;\r\n        }\r\n      }\r\n\r\n      return [1, ...pages, totalPages];\r\n    }\r\n\r\n    return range(1, totalPages);\r\n  };\r\n  render() {\r\n    if (!this.totalRecords || this.totalPages === 1) return null;\r\n\r\n    const { currentPage } = this.state;\r\n    const pages = this.fetchPageNumbers();\r\n\r\n    return (\r\n      <Fragment>\r\n        <nav aria-label=\"Pagination\">\r\n          <ul className=\"pagination\">\r\n            {pages.map((page, index) => {\r\n              if (page === LEFT_PAGE)\r\n                return (\r\n                  <li key={index} className=\"page-item\">\r\n                    <a\r\n                      className=\"page-link\"\r\n                      href=\"#\"\r\n                      aria-label=\"Previous\"\r\n                      onClick={this.handleMoveLeft}\r\n                    >\r\n                      <span aria-hidden=\"true\">&laquo;</span>\r\n                      <span className=\"sr-only\">Previous</span>\r\n                    </a>\r\n                  </li>\r\n                );\r\n\r\n              if (page === RIGHT_PAGE)\r\n                return (\r\n                  <li key={index} className=\"page-item\">\r\n                    <a\r\n                      className=\"page-link\"\r\n                      href=\"#\"\r\n                      aria-label=\"Next\"\r\n                      onClick={this.handleMoveRight}\r\n                    >\r\n                      <span aria-hidden=\"true\">&raquo;</span>\r\n                      <span className=\"sr-only\">Next</span>\r\n                    </a>\r\n                  </li>\r\n                );\r\n\r\n              return (\r\n                <li\r\n                  key={index}\r\n                  className={`page-item${\r\n                    currentPage === page ? \" active\" : \"\"\r\n                  }`}\r\n                >\r\n                  <a\r\n                    className=\"page-link\"\r\n                    href=\"#\"\r\n                    onClick={this.handleClick(page)}\r\n                  >\r\n                    {page}\r\n                  </a>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </nav>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.gotoPage(1);\r\n  }\r\n\r\n  gotoPage = (page) => {\r\n    const { onPageChanged = (f) => f } = this.props;\r\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\r\n    const paginationData = {\r\n      currentPage,\r\n      totalPages: this.totalPages,\r\n      pageLimit: this.pageLimit,\r\n      totalRecords: this.totalRecords,\r\n    };\r\n\r\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\r\n  };\r\n\r\n  handleClick = (page) => (evt) => {\r\n    evt.preventDefault();\r\n    this.gotoPage(page);\r\n  };\r\n\r\n  handleMoveLeft = (evt) => {\r\n    evt.preventDefault();\r\n    this.gotoPage(this.state.currentPage - this.pageNeighbours * 2 - 1);\r\n  };\r\n\r\n  handleMoveRight = (evt) => {\r\n    evt.preventDefault();\r\n    this.gotoPage(this.state.currentPage + this.pageNeighbours * 2 + 1);\r\n  };\r\n}\r\n\r\nexport default Pagination2;\r\n"]},"metadata":{},"sourceType":"module"}