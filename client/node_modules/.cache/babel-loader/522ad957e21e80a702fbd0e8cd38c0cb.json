{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mason\\\\Projects\\\\clozd_assignment\\\\client\\\\src\\\\App\\\\components\\\\MTable.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport MaterialTable from \"material-table\"; // import { data } from \"../data\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MTable = ({\n  data\n}) => {\n  _s();\n\n  const [selectedRow, setSelectedRow] = useState(null);\n  const columns = [{\n    title: \"#\",\n    field: \"number\"\n  }, {\n    title: \"Title\",\n    field: \"title\"\n  }, {\n    title: \"Author\",\n    field: \"authors\"\n  }, {\n    title: \"Page Count\",\n    field: \"num_pages\"\n  }, {\n    title: \"Rating\",\n    field: \"rating\"\n  }, {\n    title: \"Button\",\n    field: \"button\"\n  }]; //convert data for table usage\n\n  var temp = [];\n  data.forEach((user, i) => {\n    var obj = {};\n    obj[\"number\"] = i;\n    obj[\"title\"] = user.name.first;\n    obj[\"authors\"] = user.name.last;\n    obj[\"num_pages\"] = user.gender;\n    obj[\"rating\"] = user.email;\n    obj[\"button\"] = /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Cool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }, this);\n    temp.push(obj);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      columns: columns,\n      data: temp,\n      title: \"Books Directory\",\n      onRowClick: (evt, selectedRow) => setSelectedRow(selectedRow.tableData.id),\n      options: {\n        search: true,\n        rowStyle: rowData => ({\n          backgroundColor: selectedRow === rowData.tableData.id ? \"#67aeae\" : \"#FFF\"\n        })\n      },\n      rowsPerPageOptions: [10, 50]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MTable, \"uNqdeC4/AX7zbEPErixrXmI9Bw8=\");\n\n_c = MTable;\nexport default MTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"MTable\");","map":{"version":3,"sources":["C:/Users/mason/Projects/clozd_assignment/client/src/App/components/MTable.js"],"names":["useState","MaterialTable","MTable","data","selectedRow","setSelectedRow","columns","title","field","temp","forEach","user","i","obj","name","first","last","gender","email","push","maxWidth","evt","tableData","id","search","rowStyle","rowData","backgroundColor"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,aAAP,MAA0B,gBAA1B,C,CACA;;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAC3B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAMM,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,KAAK,EAAE;AAArB,GADc,EAEd;AAAED,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GAFc,EAGd;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAHc,EAId;AAAED,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,KAAK,EAAE;AAA9B,GAJc,EAKd;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GALc,EAMd;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GANc,CAAhB,CAF2B,CAW3B;;AACA,MAAIC,IAAI,GAAG,EAAX;AACAN,EAAAA,IAAI,CAACO,OAAL,CAAa,CAACC,IAAD,EAAOC,CAAP,KAAa;AACxB,QAAIC,GAAG,GAAG,EAAV;AACAA,IAAAA,GAAG,CAAC,QAAD,CAAH,GAAgBD,CAAhB;AACAC,IAAAA,GAAG,CAAC,OAAD,CAAH,GAAeF,IAAI,CAACG,IAAL,CAAUC,KAAzB;AACAF,IAAAA,GAAG,CAAC,SAAD,CAAH,GAAiBF,IAAI,CAACG,IAAL,CAAUE,IAA3B;AACAH,IAAAA,GAAG,CAAC,WAAD,CAAH,GAAmBF,IAAI,CAACM,MAAxB;AACAJ,IAAAA,GAAG,CAAC,QAAD,CAAH,GAAgBF,IAAI,CAACO,KAArB;AACAL,IAAAA,GAAG,CAAC,QAAD,CAAH,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAhB;AAEAJ,IAAAA,IAAI,CAACU,IAAL,CAAUN,GAAV;AACD,GAVD;AAYA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEO,MAAAA,QAAQ,EAAE;AAAZ,KAAZ;AAAA,2BACE,QAAC,aAAD;AACE,MAAA,OAAO,EAAEd,OADX;AAEE,MAAA,IAAI,EAAEG,IAFR;AAGE,MAAA,KAAK,EAAC,iBAHR;AAIE,MAAA,UAAU,EAAE,CAACY,GAAD,EAAMjB,WAAN,KACVC,cAAc,CAACD,WAAW,CAACkB,SAAZ,CAAsBC,EAAvB,CALlB;AAOE,MAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,IADD;AAEPC,QAAAA,QAAQ,EAAGC,OAAD,KAAc;AACtBC,UAAAA,eAAe,EACbvB,WAAW,KAAKsB,OAAO,CAACJ,SAAR,CAAkBC,EAAlC,GAAuC,SAAvC,GAAmD;AAF/B,SAAd;AAFH,OAPX;AAcE,MAAA,kBAAkB,EAAE,CAAC,EAAD,EAAK,EAAL;AAdtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA7CD;;GAAMrB,M;;KAAAA,M;AA8CN,eAAeA,MAAf","sourcesContent":["import { useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\n// import { data } from \"../data\";\r\n\r\nconst MTable = ({ data }) => {\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n  const columns = [\r\n    { title: \"#\", field: \"number\" },\r\n    { title: \"Title\", field: \"title\" },\r\n    { title: \"Author\", field: \"authors\" },\r\n    { title: \"Page Count\", field: \"num_pages\" },\r\n    { title: \"Rating\", field: \"rating\" },\r\n    { title: \"Button\", field: \"button\" },\r\n  ];\r\n\r\n  //convert data for table usage\r\n  var temp = [];\r\n  data.forEach((user, i) => {\r\n    var obj = {};\r\n    obj[\"number\"] = i;\r\n    obj[\"title\"] = user.name.first;\r\n    obj[\"authors\"] = user.name.last;\r\n    obj[\"num_pages\"] = user.gender;\r\n    obj[\"rating\"] = user.email;\r\n    obj[\"button\"] = <button>Cool</button>;\r\n\r\n    temp.push(obj);\r\n  });\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"100%\" }}>\r\n      <MaterialTable\r\n        columns={columns}\r\n        data={temp}\r\n        title=\"Books Directory\"\r\n        onRowClick={(evt, selectedRow) =>\r\n          setSelectedRow(selectedRow.tableData.id)\r\n        }\r\n        options={{\r\n          search: true,\r\n          rowStyle: (rowData) => ({\r\n            backgroundColor:\r\n              selectedRow === rowData.tableData.id ? \"#67aeae\" : \"#FFF\",\r\n          }),\r\n        }}\r\n        rowsPerPageOptions={[10, 50]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default MTable;\r\n"]},"metadata":{},"sourceType":"module"}