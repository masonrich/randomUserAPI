{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mason\\\\Projects\\\\clozd_assignment\\\\client\\\\src\\\\App\\\\pages\\\\Details.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Spinner } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Details = ({\n  user\n}) => {\n  _s();\n\n  // state = {\n  //   user_data: null,\n  //   loading: true,\n  // };\n  const [userData, setUserData] = useState(null);\n  const [loading, setLoading] = useState(true); //component mount and user retrieval\n\n  useEffect(() => {\n    //function to call API from backend with page number as parameter\n    //then order the users in the table and set state variables\n    const getUsers = async () => {\n      setLoading(true);\n      console.log(user);\n      setUserData(user);\n      setLoading(false);\n    };\n\n    getUsers();\n  }, []); // componentDidMount() {\n  //   this.setState({ loading: true });\n  //   const { user } = this.props.location.state;\n  //   this.setState({ user_data: user, loading: false });\n  //   console.log(user);\n  // }\n  // render() {\n\n  function formatDate(t, a, s) {\n    function format(m) {\n      let f = new Intl.DateTimeFormat(\"en\", m);\n      return f.format(t);\n    }\n\n    return a.map(format).join(s);\n  }\n\n  let a = [{\n    day: \"numeric\"\n  }, {\n    month: \"short\"\n  }, {\n    year: \"numeric\"\n  }]; // let s = formatDate(new Date(), a, \"-\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      variant: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: userData.name.first + \" \" + userData.name.last\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: userData.picture.large,\n          alt: \"Profile pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: userData.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: userData.location.street.number + \" \" + userData.location.street.name + \" \" + userData.location.city + \", \" + userData.location.state + \" \" + userData.location.postcode + \" \" + userData.location.country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: userData.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: formatDate(new Date(userData.dob.date), a, \"/\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"../\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        variant: \"raised\",\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}; // }\n\n\n_s(Details, \"vhv7d1oa6lqjcjPHNBz2j0Rabdw=\");\n\n_c = Details;\nexport default Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["C:/Users/mason/Projects/clozd_assignment/client/src/App/pages/Details.js"],"names":["React","useState","useEffect","Link","Spinner","Details","user","userData","setUserData","loading","setLoading","getUsers","console","log","formatDate","t","a","s","format","m","f","Intl","DateTimeFormat","map","join","day","month","year","name","first","last","picture","large","email","location","street","number","city","state","postcode","country","phone","Date","dob","date"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Details = ({ user }) => {\r\n  // state = {\r\n  //   user_data: null,\r\n  //   loading: true,\r\n  // };\r\n  const [userData, setUserData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  //component mount and user retrieval\r\n  useEffect(() => {\r\n    //function to call API from backend with page number as parameter\r\n    //then order the users in the table and set state variables\r\n    const getUsers = async () => {\r\n      setLoading(true);\r\n      console.log(user);\r\n      setUserData(user);\r\n      setLoading(false);\r\n    };\r\n    getUsers();\r\n  }, []);\r\n\r\n  // componentDidMount() {\r\n  //   this.setState({ loading: true });\r\n  //   const { user } = this.props.location.state;\r\n  //   this.setState({ user_data: user, loading: false });\r\n  //   console.log(user);\r\n  // }\r\n\r\n  // render() {\r\n  function formatDate(t, a, s) {\r\n    function format(m) {\r\n      let f = new Intl.DateTimeFormat(\"en\", m);\r\n      return f.format(t);\r\n    }\r\n    return a.map(format).join(s);\r\n  }\r\n\r\n  let a = [{ day: \"numeric\" }, { month: \"short\" }, { year: \"numeric\" }];\r\n  // let s = formatDate(new Date(), a, \"-\");\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {loading ? (\r\n        <Spinner animation=\"border\" variant=\"primary\" />\r\n      ) : (\r\n        <div>\r\n          <h1>{userData.name.first + \" \" + userData.name.last}</h1>\r\n          <div>\r\n            <img src={userData.picture.large} alt={\"Profile pic\"} />\r\n          </div>\r\n          <p>{userData.email}</p>\r\n          <p>\r\n            {userData.location.street.number +\r\n              \" \" +\r\n              userData.location.street.name +\r\n              \" \" +\r\n              userData.location.city +\r\n              \", \" +\r\n              userData.location.state +\r\n              \" \" +\r\n              userData.location.postcode +\r\n              \" \" +\r\n              userData.location.country}\r\n          </p>\r\n          <p>{userData.phone}</p>\r\n          <p>{formatDate(new Date(userData.dob.date), a, \"/\")}</p>\r\n        </div>\r\n      )}\r\n      {/* Link to List.js */}\r\n      <Link to={\"../\"}>\r\n        <button variant=\"raised\">Go Back</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n// }\r\nexport default Details;\r\n"]},"metadata":{},"sourceType":"module"}